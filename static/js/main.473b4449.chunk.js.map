{"version":3,"sources":["components/NavBar/NavBar.js","components/Home/styles.js","components/Home/Home.js","components/Education/styles.js","components/Education/Education.js","components/Work/styles.js","components/Work/Work.js","components/App/styles.js","components/App/App.js","serviceWorker.js","index.js","assets/Resume.pdf","assets/retro.gif","assets/gator.png","assets/amex-logo.svg"],"names":["NavBar","Navbar","expand","Nav","className","to","activeClass","resume","target","Component","InputWrapper","styled","div","retro","HeaderText","RowWrapper","SocialIcon","require","Home","data","map","speed","name","description","Col","xs","url","bgColor","Text","HeadingText","ImageWrapper","gator","EducationWrapper","Education","Row","college","degree","graduationYear","location","Image","amex","Work","employer","title","jobDescription1","jobDescription2","previousTitle","previousJobDescription1","previousJobDescription2","previousJobDescription3","previousJobDescription4","previousJobDescription5","previousJobDescription6","ButtonWrapper","Wrapper","Sticky","App","useEffect","window","scrollTo","Button","variant","size","onClick","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"qPA4BeA,E,uKArBX,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACC,EAAA,EAAD,CAAKC,UAAU,UACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,GAAG,IAAIC,YAAY,SAASF,UAAU,YAApD,QAGE,kBAAC,IAAD,CACEC,GAAIE,IACJC,OAAO,SACPF,YAAY,SACZF,UAAU,YAJZ,iB,GATKK,a,0ZCFrB,IAAMC,EAAeC,IAAOC,IAAV,IAEUC,KAGtBC,EAAaH,IAAOC,IAAV,KAKVG,EAAaJ,IAAOC,IAAV,K,kCCPVI,EAAeC,EAAQ,IAAvBD,WAuCSE,MArCf,WACE,OACE,kBAACR,EAAD,KACGS,EAAKC,KAAI,SAACD,GAAD,OACR,kBAACL,EAAD,KACE,kBAAC,IAAD,CAAQO,MAAO,KACb,oCAAUF,EAAKG,KAAf,MAEF,4BAAKH,EAAKI,iBAGd,kBAACR,EAAD,KACE,kBAACS,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACT,EAAD,CACEU,IAAI,wDACJlB,OAAO,SACPmB,QAAQ,aAGZ,kBAACH,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACT,EAAD,CACEU,IAAI,mCACJlB,OAAO,SACPmB,QAAQ,aAGZ,kBAACH,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACT,EAAD,CACEU,IAAI,kCACJlB,OAAO,SACPmB,QAAQ,gB,ojBCnCpB,IAAMC,EAAOjB,YAAO,KAAPA,CAAH,KAKJkB,EAAclB,YAAO,KAAPA,CAAH,KAKXmB,EAAenB,IAAOC,IAAV,IACQmB,KAMpBC,EAAmBrB,IAAOC,IAAV,K,SCUPqB,MAxBf,WACE,OACE,kBAACD,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACV,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACK,EAAD,OAEF,kBAACN,EAAA,EAAD,KACE,kBAACK,EAAD,oBACCV,EAAKC,KAAI,SAACD,GAAD,OACR,kBAACS,EAAD,KACE,4BAAKT,EAAKgB,SACV,4BACGhB,EAAKiB,OACN,6BACCjB,EAAKkB,eAHR,KAG0BlB,EAAKmB,kB,8cClB7C,IAAMV,EAAOjB,YAAO,KAAPA,CAAH,KAKJkB,EAAclB,YAAO,KAAPA,CAAH,KAMX4B,EAAQ5B,IAAOC,IAAV,IACiB4B,KC8BbC,MAvCf,WACE,OACE,kBAACP,EAAA,EAAD,KACE,kBAACV,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACc,EAAD,OAEF,kBAACf,EAAA,EAAD,KACE,kBAAC,EAAD,eACCL,EAAKC,KAAI,SAACD,GAAD,OACR,kBAAC,EAAD,KACE,2BACE,4BAAKA,EAAKuB,WAEZ,4BACGvB,EAAKwB,MACN,6BACA,4BACE,4BAAKxB,EAAKyB,iBACV,4BAAKzB,EAAK0B,mBAGd,4BACG1B,EAAK2B,cACN,6BACA,4BACE,4BAAK3B,EAAK4B,yBACV,4BAAK5B,EAAK6B,yBACV,4BAAK7B,EAAK8B,yBACV,4BAAK9B,EAAK+B,yBACV,4BAAK/B,EAAKgC,yBACV,4BAAKhC,EAAKiC,kC,icClC1B,IAAMC,GAAgB1C,IAAOC,IAAV,MAOb0C,GAAU3C,IAAOC,IAAV,MAIP2C,GAAS5C,IAAOC,IAAV,MC0BG4C,OA5Bf,WAIE,OAHAC,qBAAU,WACRC,OAAOC,SAAS,EAAG,MAGnB,kBAACL,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,WAAD,CAASjC,KAAK,OAAOlB,UAAU,WAC7B,kBAAC,EAAD,QAGJ,kBAAC,WAAD,CAASkB,KAAK,YAAYlB,UAAU,WAClC,kBAAC,EAAD,OAEF,kBAAC,WAAD,CAASkB,KAAK,OAAOlB,UAAU,WAC7B,kBAAC,EAAD,OAGF,kBAACiD,GAAD,KACE,kBAACO,GAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,KAAKC,QAAS,kBAAML,OAAOC,SAAS,EAAG,KAAnE,aCnBYK,QACW,cAA7BN,OAAOpB,SAAS2B,UAEe,UAA7BP,OAAOpB,SAAS2B,UAEhBP,OAAOpB,SAAS2B,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,ouDEzI5BC,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.473b4449.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Link as DownloadLink } from \"react-router-dom\";\nimport resume from '../../assets/Resume.pdf';\nclass NavBar extends Component {\n  render() {\n    return (\n        <Navbar expand=\"lg\">\n            <Nav className=\"m-auto\">\n            <BrowserRouter>\n              <DownloadLink to=\"/\" activeClass=\"active\" className=\"nav-link\">\n                Home\n              </DownloadLink>\n                <DownloadLink\n                  to={resume}\n                  target=\"_blank\"\n                  activeClass=\"active\"\n                  className=\"nav-link\"\n                >\n                  Resume\n                </DownloadLink>\n              </BrowserRouter>\n            </Nav>\n        </Navbar>\n    );\n  }\n}\nexport default NavBar;\n","import styled from '@emotion/styled';\nimport retro from '../../assets/retro.gif'\n\nconst InputWrapper = styled.div`\n    color: white;\n    background-image: url(${retro});\n`;\n\nconst HeaderText = styled.div`\n    text-align: center;\n    padding: 2rem;\n`;\n\nconst RowWrapper = styled.div`\n    padding: 1rem;\n    display: flex;\n    justify-content: center\n`;\n\nexport {\n    InputWrapper,HeaderText, RowWrapper\n}","import React from \"react\";\nimport { InputWrapper, HeaderText, RowWrapper } from \"./styles\";\nimport Typing from \"react-typing-animation\";\nimport data from \"../../data.json\";\nimport { Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nvar { SocialIcon } = require(\"react-social-icons\");\n\nfunction Home() {\n  return (\n    <InputWrapper>\n      {data.map((data) => (\n        <HeaderText>\n          <Typing speed={120}>\n            <h1>I am {data.name}.</h1>\n          </Typing>\n          <h4>{data.description}</h4>\n        </HeaderText>\n      ))}\n      <RowWrapper>\n        <Col xs={1}>\n          <SocialIcon\n            url=\"https://www.linkedin.com/in/sami-lieberman-609059125/\"\n            target=\"_blank\"\n            bgColor=\"#FFFFFF\"\n          />\n        </Col>\n        <Col xs={1}>\n          <SocialIcon\n            url=\"https://github.com/samilieberman\"\n            target=\"_blank\"\n            bgColor=\"#FFFFFF\"\n          />\n        </Col>\n        <Col xs={1}>\n          <SocialIcon\n            url=\"mailto:samilieberman1@gmail.com\"\n            target=\"_blank\"\n            bgColor=\"#FFFFFF\"\n          />\n        </Col>\n      </RowWrapper>\n    </InputWrapper>\n  );\n}\nexport default Home;\n","import styled from \"@emotion/styled\";\nimport gator from '../../assets/gator.png'\n\nconst Text = styled(\"h3\")`\n  margin: 10px;\n  font-family: monospace;\n`;\n\nconst HeadingText = styled(\"h1\")`\n  font-family: monospace;\n  font-weight: bold;\n`;\n\nconst ImageWrapper = styled.div`\n  background-image: url(${gator});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst EducationWrapper = styled.div`\n  margin-top: 0.75rem;\n  border-bottom: 1px dotted black;\n`;\n\nexport { Text, HeadingText, ImageWrapper, EducationWrapper };\n","import React from \"react\";\nimport { Text, HeadingText, ImageWrapper, EducationWrapper } from \"./styles\";\nimport { Col, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Education() {\n  return (\n    <EducationWrapper>\n      <Row>\n        <Col xs={2}>\n          <ImageWrapper />\n        </Col>\n        <Col>\n          <HeadingText> Education </HeadingText>\n          {data.map((data) => (\n            <Text>\n              <h3>{data.college}</h3>\n              <h3>\n                {data.degree}\n                <br />\n                {data.graduationYear}, {data.location}\n              </h3>\n            </Text>\n          ))}\n        </Col>\n      </Row>\n    </EducationWrapper>\n  );\n}\nexport default Education;\n","import styled from '@emotion/styled';\nimport amex from '../../assets/amex-logo.svg'\n\nconst Text = styled(\"h3\")`\n  margin: 10px;\n  font-family: monospace;\n`;\n\nconst HeadingText = styled(\"h1\")`\n  font-family: monospace;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${amex});\n    height: 100%;\n    background-size: contain;\n    background-repeat: no-repeat;\n`;\n\nexport {\n    HeadingText, Text, Image\n}","import React  from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Text, HeadingText, Image } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Work() {\n  return (\n    <Row>\n      <Col xs={2}>\n        <Image />\n      </Col>\n      <Col>\n        <HeadingText> Work </HeadingText>\n        {data.map((data) => (\n          <Text>\n            <b>\n              <h3>{data.employer}</h3>\n            </b>\n            <h4>\n              {data.title}\n              <br />\n              <ul>\n                <li>{data.jobDescription1}</li>\n                <li>{data.jobDescription2}</li>\n              </ul>\n            </h4>\n            <h4>\n              {data.previousTitle}\n              <br />\n              <ul>\n                <li>{data.previousJobDescription1}</li>\n                <li>{data.previousJobDescription2}</li>\n                <li>{data.previousJobDescription3}</li>\n                <li>{data.previousJobDescription4}</li>\n                <li>{data.previousJobDescription5}</li>\n                <li>{data.previousJobDescription6}</li>\n              </ul>\n            </h4>\n          </Text>\n        ))}\n      </Col>\n    </Row>\n  );\n}\nexport default Work;\n","import styled from \"@emotion/styled\";\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n\nconst Wrapper = styled.div`\n  background-color: white;\n`;\n\nconst Sticky = styled.div`\n  // position: sticky;\n  // top: 0;\n  // left: 0;\n  // right: 0;\n  // z-index: 10;\n`;\n\nexport { ButtonWrapper, Wrapper, Sticky };\n","import React, {useEffect} from \"react\";\nimport \"./App.css\";\nimport NavBar from \"../NavBar/NavBar\";\n\nimport Home from \"../Home/Home\";\nimport Education from \"../Education/Education\";\nimport Work from \"../Work/Work\";\nimport { Element } from \"react-scroll\";\nimport { Button } from \"react-bootstrap\";\nimport { ButtonWrapper, Wrapper, Sticky } from \"./styles\";\n\nfunction App() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n  return (\n    <Wrapper>\n      <Sticky>\n        <NavBar />\n        <Element name=\"home\" className=\"element\">\n          <Home />\n        </Element>\n      </Sticky>\n      <Element name=\"education\" className=\"element\">\n        <Education />\n      </Element>\n      <Element name=\"work\" className=\"element\">\n        <Work />\n      </Element>\n\n      <ButtonWrapper>\n        <Button variant=\"dark\" size=\"sm\" onClick={() => window.scrollTo(0, 0)}>\n          ⇧\n        </Button>\n      </ButtonWrapper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Resume.875523f5.pdf\";","module.exports = __webpack_public_path__ + \"static/media/retro.3d39ec2e.gif\";","module.exports = __webpack_public_path__ + \"static/media/gator.c70016c4.png\";","module.exports = __webpack_public_path__ + \"static/media/amex-logo.3daed682.svg\";"],"sourceRoot":""}