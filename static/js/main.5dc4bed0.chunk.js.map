{"version":3,"sources":["assets/Resume.pdf","assets/retro2.gif","assets/gator.gif","assets/amex-logo.svg","assets/projects2.png","components/NavBar/styles.js","components/NavBar/NavBar.js","components/Contact/styles.js","components/Contact/Contact.js","components/Home/styles.js","components/Home/Home.js","components/Education/styles.js","components/Education/Education.js","components/Work/styles.js","components/Work/Work.js","components/Projects/styles.js","components/Projects/Projects.js","components/App/styles.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavWrapper","styled","Navbar","Component","Wrapper","div","Contact","Col","url","target","bgColor","InputWrapper","retro","HeaderText","StyledTypist","Typist","props","color","Link","Home","data","map","item","cursor","show","avgTypingDelay","name","Delay","ms","startDelay","description","StyledCol","Text","h3","HeadingText","h1","ImageWrapper","gator","Education","Row","xs","lg","education","college","degree","graduationYear","location","Image","amex","WorkWrapper","Work","employment","employer","title","jobDescription","ProjectsWrapper","projects","Projects","href","ButtonWrapper","Background","WIP","background","App","useState","setBackground","useEffect","interval","setInterval","arr","randomColor","Math","floor","random","length","clearInterval","role","aria-label","Button","variant","size","onClick","window","scrollTo","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5dc4bed0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.875523f5.pdf\";","module.exports = __webpack_public_path__ + \"static/media/retro2.9482f744.gif\";","module.exports = __webpack_public_path__ + \"static/media/gator.424c43e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/amex-logo.3daed682.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects2.bc316732.png\";","import styled from 'styled-components'\nimport { Navbar } from \"react-bootstrap\";\n\nconst NavWrapper = styled(Navbar)`\n  background-color: black;\n  color: white;\n`;\n\nexport { NavWrapper };\n","import React, { Component } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { NavWrapper } from \"./styles\";\nimport { BrowserRouter, Link as DownloadLink } from \"react-router-dom\";\nimport resume from '../../assets/Resume.pdf';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass NavBar extends Component {\n  render() {\n    return (\n        <NavWrapper expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Nav className=\"m-auto\">\n            <BrowserRouter>\n                <DownloadLink\n                  to={resume}\n                  target=\"_blank\"\n                  className=\"nav-link\"\n                >\n                  Resume\n                </DownloadLink>\n              </BrowserRouter>\n            </Nav>\n        </NavWrapper>\n    );\n  }\n}\nexport default NavBar;\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n`;\n\nexport {\n    Wrapper\n}\n","import React from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport { Wrapper } from \"./styles\";\nimport { Col } from \"react-bootstrap\";\n\nfunction Contact() {\n  return (\n    <Wrapper>\n      <Col>\n      <SocialIcon\n        url=\"https://www.linkedin.com/in/sami-lieberman-609059125/\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n      </Col>\n      <Col>\n      <SocialIcon\n        url=\"https://github.com/samilieberman\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n      </Col>\n      <Col>\n      <SocialIcon\n        url=\"mailto:samilieberman1@gmail.com\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n      </Col>\n    </Wrapper>\n  );\n}\nexport default Contact;\n","import styled from 'styled-components'\nimport retro from '../../assets/retro2.gif'\nimport Typist from 'react-typist';\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst InputWrapper = styled.div`\n    color: white;\n    background-image: url(${retro});\n    background-size: 100%;\n    height: 25rem;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst HeaderText = styled.div`\n    text-align: center;\n    padding: 2rem;\n`;\n\nconst StyledTypist = styled(Typist)`\n    color: ${(props) => props.color};\n`\n\nconst StyledButton = styled(Link)`\n    background-color: black;\n    color: white;\n`\n\nexport {\n    InputWrapper, HeaderText, StyledTypist, StyledButton\n}","import React from \"react\";\nimport Contact from \"../Contact/Contact\";\nimport { InputWrapper, HeaderText, StyledTypist, StyledButton } from \"./styles\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport data from \"../../data.json\";\nimport resume from '../../assets/Resume.pdf';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Home() {\n  return (\n    <>\n    <InputWrapper>\n    {/* <BrowserRouter>\n      <StyledButton to={resume} target=\"_blank\" download>Download</StyledButton>\n    </BrowserRouter> */}\n      <HeaderText>\n      {data.map((item) => (\n        <div>\n          <StyledTypist \n            cursor={{ show: false }}\n            avgTypingDelay={40}\n          >\n            <h1>I am {item.name}.</h1>\n          </StyledTypist>\n          <StyledTypist.Delay ms={20000} />\n          <StyledTypist \n            cursor={{ show: false }}\n            avgTypingDelay={40} \n            startDelay={2000}\n          >\n            <h4>{item.description}</h4>\n          </StyledTypist>\n        </div>\n      ))}\n      </HeaderText>\n      <Contact />\n    </InputWrapper>\n    </>\n  );\n}\nexport default Home;","import styled from 'styled-components'\nimport gator from '../../assets/gator.gif'\nimport { Col } from 'react-bootstrap';\n\nconst StyledCol = styled(Col)`\n  align-content: right;\n`;\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 18px;\n  padding-top: 10px;\n`;\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n`;\n\nconst ImageWrapper = styled.div`\n  background-image: url(${gator});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst Wrapper = styled.div`\n  padding: 50px;\n  background-color: black;\n  color: white;\n`;\n\nexport { Text, HeadingText, ImageWrapper, Wrapper, StyledCol };\n","import React from \"react\";\nimport { Text, HeadingText, ImageWrapper, Wrapper, StyledCol } from \"./styles\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Education() {\n  return (\n    <Wrapper>\n      <Row>\n        <Col>\n          <ImageWrapper />\n        </Col>\n        <StyledCol xs lg=\"10\" >\n          <HeadingText> Education </HeadingText>\n          {data[0].education.map((item) => (\n            <Text>\n              {item.college}\n              <br />\n              {item.degree}\n              <br />\n              {item.graduationYear}, {item.location}\n            </Text>\n          ))}\n        </StyledCol>\n      </Row>\n    </Wrapper>\n  );\n}\nexport default Education;\n","import styled from 'styled-components'\nimport amex from '../../assets/amex-logo.svg'\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 18px;\n  `;\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${amex});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst WorkWrapper = styled.div`\n  color: white;\n  background-color: black;\n  padding-left:50px;\n  padding-right:50px;\n  padding-bottom:50px;\n`;\n\nexport {\n    HeadingText, Text, Image, WorkWrapper\n}","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Text, HeadingText, Image, WorkWrapper } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Work() {\n  return (\n    <WorkWrapper>\n      <Row>\n        <Col xs={2}>\n          <Image />\n        </Col>\n        <Col>\n          <HeadingText> Work </HeadingText>\n          {data[0].employment.map((item) => (\n            <Text>\n              <b>{item.employer}</b> <br />\n              {item.title} <br />\n              <ul>\n              {item.jobDescription.map((description) => (\n                <li>{description}</li>\n              ))}\n              </ul>\n            </Text>\n          ))}\n        </Col>\n      </Row>\n    </WorkWrapper>\n  );\n}\nexport default Work;\n","import styled from 'styled-components'\nimport projects from '../../assets/projects2.png'\nimport { Col } from 'react-bootstrap'\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  margin-top: 20px;\n  color: white;\n`;\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 24px;\n  `;\n\nconst ProjectsWrapper = styled.div`\n  color: white;\n  background-color: black;\n  padding-left:50px;\n  padding-right:50px;\n  padding-bottom:50px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${projects});\n  height: 12rem;\n  background-size: cover;\n  background-repeat: no-repeat; \n`;\n\nconst StyledCol = styled(Col)`\n  color: white;\n  padding: 1rem;\n`;\n\nexport {\n    HeadingText, ProjectsWrapper, Image, StyledCol, Text\n}","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { HeadingText, ProjectsWrapper, StyledCol } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Projects() {\n  return (\n    <ProjectsWrapper>\n      <Row>\n        {/* <Col xs lg=\"2\">\n          <Image />\n        </Col> */}\n        <Col>\n          <HeadingText> Projects </HeadingText>\n          <Row>\n            <StyledCol><a href=\"https://github.com/samilieberman/StudyBuddy\">Study Buddy</a>: React Native Android and iOS mobile application\n                that facilitates finding ‘study buddies’</StyledCol>\n            <StyledCol><a href=\"https://github.com/samilieberman/hidden_gems\">Hidden Gems</a>: Android mobile application that helped users locate\n                ‘hidden gems’ in their vicinity by utilizing Firebase, Flutter,\n                Dart, and Google Maps API</StyledCol>\n            <StyledCol><a href=\"https://github.com/GamerGator4/GG4\">Gamer Gator</a>: Led a team as scrum master in developing a web\n                application to improve event planning for gamers using the MEAN\n                Stack, NodeJS, PassportJS, UI-Calendar API, and Google Maps API.</StyledCol>\n          </Row>\n        </Col>\n      </Row>\n    </ProjectsWrapper>\n  );\n}\nexport default Projects;\n","import styled from 'styled-components'\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n\nconst Sticky = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n`;\n\nconst Background = styled.div`\n  background-color: black;\n`;\n\nexport { ButtonWrapper, Sticky, Background };\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport NavBar from \"../NavBar/NavBar\";\nimport Home from \"../Home/Home\";\nimport Education from \"../Education/Education\";\nimport Work from \"../Work/Work\";\nimport Projects from \"../Projects/Projects\";\nimport { Button } from \"react-bootstrap\";\nimport { ButtonWrapper, Background } from \"./styles\";\n\nconst WIP = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background-color: ${(props) => props.background};\n  color: white;\n`;\n\nfunction App() {\n  const [background, setBackground] = useState(\"black\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var arr = ['#FAD74F','#F19344','#25279C','#492E5E','#F2846B'];\n      var randomColor = arr[Math.floor(Math.random() * arr.length)]\n      setBackground(randomColor);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Background>\n      <WIP background={background}>\n        <strong>\n          <span role=\"img\" aria-label=\"wip\">\n            🚧 Work In Progress 🚧\n          </span>\n        </strong>\n      </WIP>\n      {/* <NavBar /> */}\n      <Home />\n      <Education />\n      <Work />\n      <Projects />\n      <ButtonWrapper>\n        <Button variant=\"dark\" size=\"sm\" onClick={() => window.scrollTo(0, 0)}>\n          ⇧\n        </Button>\n      </ButtonWrapper>\n    </Background>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}