{"version":3,"sources":["assets/Resume.pdf","assets/retro.gif","assets/gator.png","assets/amex-logo.svg","assets/projects2.png","components/NavBar/NavBar.js","components/Contact/styles.js","components/Contact/Contact.js","components/Home/styles.js","components/Home/Home.js","components/Education/styles.js","components/Education/Education.js","components/Work/styles.js","components/Work/Work.js","components/Projects/styles.js","components/Projects/Projects.js","components/App/styles.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","expand","Nav","className","to","resume","target","Component","Wrapper","styled","div","Contact","url","bgColor","InputWrapper","retro","HeaderText","Home","data","map","item","speed","name","description","Text","h3","HeadingText","h1","ImageWrapper","gator","Education","Row","Col","xs","education","college","degree","graduationYear","location","Image","amex","WorkWrapper","Work","employment","employer","title","jobDescription","ProjectsWrapper","projects","Projects","ButtonWrapper","WIP","props","background","App","useState","setBackground","useEffect","interval","setInterval","randomColor","Math","floor","random","toString","clearInterval","role","aria-label","Button","variant","size","onClick","window","scrollTo","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd5abe75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.875523f5.pdf\";","module.exports = __webpack_public_path__ + \"static/media/retro.3d39ec2e.gif\";","module.exports = __webpack_public_path__ + \"static/media/gator.c70016c4.png\";","module.exports = __webpack_public_path__ + \"static/media/amex-logo.3daed682.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects2.bc316732.png\";","import React, { Component } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Link as DownloadLink } from \"react-router-dom\";\nimport resume from '../../assets/Resume.pdf';\nclass NavBar extends Component {\n  render() {\n    return (\n        <Navbar expand=\"lg\">\n            <Nav className=\"m-auto\">\n            <BrowserRouter>\n              <DownloadLink to=\"/\" className=\"nav-link\">\n                Home\n              </DownloadLink>\n                <DownloadLink\n                  to={resume}\n                  target=\"_blank\"\n                  className=\"nav-link\"\n                >\n                  Resume\n                </DownloadLink>\n              </BrowserRouter>\n            </Nav>\n        </Navbar>\n    );\n  }\n}\nexport default NavBar;\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    padding: 1rem;\n`;\n\nexport {\n    Wrapper\n}\n","import React from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport { Wrapper } from \"./styles\";\n\nfunction Contact() {\n  return (\n    <Wrapper>\n      <SocialIcon\n        url=\"https://www.linkedin.com/in/sami-lieberman-609059125/\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n      <SocialIcon\n        url=\"https://github.com/samilieberman\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n      <SocialIcon\n        url=\"mailto:samilieberman1@gmail.com\"\n        target=\"_blank\"\n        bgColor=\"white\"\n      />\n    </Wrapper>\n  );\n}\nexport default Contact;\n","import styled from 'styled-components'\nimport retro from '../../assets/retro.gif'\n\nconst InputWrapper = styled.div`\n    color: white;\n    background-image: url(${retro});\n    background-repeat: no-repeat;\n    background-size: 100%;\n`;\n\nconst HeaderText = styled.div`\n    text-align: center;\n    padding: 2rem;\n`;\n\nexport {\n    InputWrapper,HeaderText\n}","import React from \"react\";\nimport Contact from \"../Contact/Contact\";\nimport { InputWrapper, HeaderText } from \"./styles\";\nimport Typing from \"react-typing-animation\";\nimport data from \"../../data.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Home() {\n  return (\n    <InputWrapper>\n      <HeaderText>\n      {data.map((item) => (\n        <div>\n        <Typing speed={120}>\n          <h1>I am {item.name}.</h1>\n        </Typing>\n        <h4>{item.description}</h4>\n        </div>\n      ))}\n      </HeaderText>\n      <Contact />\n    </InputWrapper>\n  );\n}\nexport default Home;","import styled from 'styled-components'\nimport gator from '../../assets/gator.png'\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-size: 24px;\n  padding-top: 10px;\n`;\n\nconst HeadingText = styled.h1`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-weight: bold;\n`;\n\nconst ImageWrapper = styled.div`\n  background-image: url(${gator});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst Wrapper = styled.div`\n  padding: 50px;\n`;\n\nexport { Text, HeadingText, ImageWrapper, Wrapper };\n","import React from \"react\";\nimport { Text, HeadingText, ImageWrapper, Wrapper } from \"./styles\";\nimport { Col, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Education() {\n  return (\n    <Wrapper>\n      <Row>\n        <Col xs={2}>\n          <ImageWrapper />\n        </Col>\n        <Col>\n          <HeadingText> Education </HeadingText>\n          {data[0].education.map((item) => (\n            <Text>\n              {item.college}\n              <br />\n              {item.degree}\n              <br />\n              {item.graduationYear}, {item.location}\n            </Text>\n          ))}\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\nexport default Education;\n","import styled from 'styled-components'\nimport amex from '../../assets/amex-logo.svg'\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-size: 24px;\n  `;\n\nconst HeadingText = styled.h1`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${amex});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst WorkWrapper = styled.div`\n  padding-left:50px;\n  padding-right:50px;\n  padding-bottom:50px;\n`;\n\nexport {\n    HeadingText, Text, Image, WorkWrapper\n}","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Text, HeadingText, Image, WorkWrapper } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Work() {\n  return (\n    <WorkWrapper>\n      <Row>\n        <Col xs={2}>\n          <Image />\n        </Col>\n        <Col>\n          <HeadingText> Work </HeadingText>\n          {data[0].employment.map((item) => (\n            <Text>\n              <b>{item.employer}</b> <br />\n              {item.title} <br />\n              <ul>\n              {item.jobDescription.map((description) => (\n                <li>{description}</li>\n              ))}\n              </ul>\n              <br />\n            </Text>\n          ))}\n        </Col>\n      </Row>\n    </WorkWrapper>\n  );\n}\nexport default Work;\n","import styled from 'styled-components'\nimport projects from '../../assets/projects2.png'\n\nconst HeadingText = styled.h1`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nconst ProjectsWrapper = styled.div`\n  padding-left:50px;\n  padding-right:50px;\n  padding-bottom:50px;\n  height: 200px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${projects});\n  height: 10rem;\n  background-size: cover;\n  background-repeat: no-repeat; \n`;\n\nexport {\n    HeadingText, ProjectsWrapper, Image\n}","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { HeadingText, ProjectsWrapper, Image } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Projects() {\n  return (\n    <ProjectsWrapper>\n      <Row>\n        <Col xs={2}>\n          <Image />\n        </Col>\n        <Col>\n          <HeadingText> Projects </HeadingText>\n        </Col>\n      </Row>\n    </ProjectsWrapper>\n  );\n}\nexport default Projects;\n","import styled from 'styled-components'\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n\nconst Sticky = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n`;\n\nexport { ButtonWrapper, Sticky };\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport NavBar from \"../NavBar/NavBar\";\nimport Home from \"../Home/Home\";\nimport Education from \"../Education/Education\";\nimport Work from \"../Work/Work\";\nimport Projects from \"../Projects/Projects\";\nimport { Button } from \"react-bootstrap\";\nimport { ButtonWrapper } from \"./styles\";\n\nconst WIP = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background-color: ${(props) => props.background};\n  color: white;\n`;\n\nfunction App() {\n  const [background, setBackground] = useState(\"black\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      if(randomColor !== '#23954') setBackground(randomColor);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <WIP background={background}>\n        <strong>\n          <span role=\"img\" aria-label=\"wip\">\n            🚧 Work In Progress 🚧\n          </span>\n        </strong>\n      </WIP>\n      <NavBar />\n      <Home />\n      <Education />\n      <Work />\n      <Projects />\n      <ButtonWrapper>\n        <Button variant=\"dark\" size=\"sm\" onClick={() => window.scrollTo(0, 0)}>\n          ⇧\n        </Button>\n      </ButtonWrapper>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}