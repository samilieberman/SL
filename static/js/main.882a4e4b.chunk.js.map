{"version":3,"sources":["assets/retro2.gif","assets/gator.gif","assets/amex-logo.svg","assets/projects2.png","components/Contact/styles.js","components/Contact/Contact.js","components/Home/styles.js","components/Home/Home.js","components/Education/styles.js","components/Education/Education.js","components/Work/styles.js","components/Work/Work.js","components/Projects/styles.js","components/Projects/Projects.js","components/Skills/styles.js","components/Skills/Skills.js","components/App/styles.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","div","Contact","Col","url","target","bgColor","style","height","width","InputWrapper","HeaderText","StyledTypist","Typist","props","color","HomeWrapper","retro","Home","data","map","item","cursor","show","avgTypingDelay","name","Delay","ms","startDelay","description","Text","h3","HeadingText","h1","EducationWrapper","gator","Container","Education","Row","education","college","degree","graduationYear","location","WorkWrapper","amex","Work","employment","employer","href","link","title","jobDescription","ProjectsWrapper","StyledCol","projects","Projects","SkillsWrapper","SkillBadge","Badge","Skills","skills","skill","pill","variant","ButtonWrapper","Background","theme","ThemeButton","background","Button","App","useState","setTheme","onClick","size","aria-label","role","window","scrollTo","top","behavior","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.882a4e4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/retro2.9482f744.gif\";","module.exports = __webpack_public_path__ + \"static/media/gator.424c43e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/amex-logo.3daed682.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects2.bc316732.png\";","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n`;\n\nexport {\n    Wrapper\n}\n","import React from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport { Wrapper } from \"./styles\";\nimport { Col } from \"react-bootstrap\";\n\nfunction Contact() {\n  return (\n    <Wrapper>\n      <Col>\n      <SocialIcon\n        url=\"https://www.linkedin.com/in/sami-lieberman-609059125/\"\n        target=\"_blank\"\n        bgColor=\"#157FFB\"\n        style={{ height: 60, width: 60 }}\n      />\n      </Col>\n      <Col>\n      <SocialIcon\n        url=\"https://github.com/samilieberman\"\n        target=\"_blank\"\n        bgColor=\"#157FFB\"\n        style={{ height: 60, width: 60 }}\n      />\n      </Col>\n      <Col>\n      <SocialIcon\n        url=\"mailto:samilieberman1@gmail.com\"\n        target=\"_blank\"\n        bgColor=\"#157FFB\"\n        style={{ height: 60, width: 60 }}\n      />\n      </Col>\n    </Wrapper>\n  );\n}\nexport default Contact;\n","import styled from 'styled-components'\nimport retro from '../../assets/retro2.gif'\nimport Typist from 'react-typist';\n\nconst InputWrapper = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst HeaderText = styled.div`\n    text-align: center;\n    padding: 2rem;\n`;\n\nconst StyledTypist = styled(Typist)`\n    color: ${(props) => props.color};\n`\n\nconst HomeWrapper = styled.div`\n    /* background-image: url(${retro}); */\n    background-size: 100%;\n    height: 20rem;\n`;\n\nexport {\n    InputWrapper, HeaderText, StyledTypist, HomeWrapper\n}","import React from \"react\";\nimport Contact from \"../Contact/Contact\";\nimport { InputWrapper, HeaderText, StyledTypist, HomeWrapper } from \"./styles\";\nimport data from \"../../data.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Home() {\n  return (\n    <HomeWrapper>\n      <InputWrapper>\n        <HeaderText>\n          {data.map((item) => (\n            <div>\n              <StyledTypist cursor={{ show: false }} avgTypingDelay={40}>\n                <h1>I am {item.name}.</h1>\n              </StyledTypist>\n              <StyledTypist.Delay ms={20000} />\n              <StyledTypist\n                cursor={{ show: false }}\n                avgTypingDelay={40}\n                startDelay={2000}\n              >\n                <h4>{item.description}</h4>\n              </StyledTypist>\n            </div>\n          ))}\n        </HeaderText>\n        <Contact />\n      </InputWrapper>\n    </HomeWrapper>\n  );\n}\nexport default Home;\n","import styled from 'styled-components'\nimport gator from '../../assets/gator.gif'\nimport { Col, Container } from 'react-bootstrap';\n\nconst StyledCol = styled(Col)`\n  align-content: right;\n`;\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 18px;\n  padding-top: 10px;\n`;\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  font-size: 24px;\n  &:hover {\n    color:#F4B400;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  background-image: url(${gator});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst EducationWrapper = styled(Container)`\n  padding-left:0px;\n  padding-right:0px;\n`;\n\nexport { Text, HeadingText, ImageWrapper, EducationWrapper, StyledCol };\n","import React from \"react\";\nimport { Text, HeadingText, EducationWrapper } from \"./styles\";\nimport { Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Education() {\n  return (\n    <EducationWrapper>\n      <Row>\n        <HeadingText> Education </HeadingText>\n      </Row>\n      {data[0].education.map((item) => (\n        <Row>\n          <Text>\n            {item.college}\n            <br />\n            {item.degree}\n            <br />\n            {item.graduationYear}, {item.location}\n          </Text>\n        </Row>\n      ))}\n    </EducationWrapper>\n  );\n}\nexport default Education;\n","import styled from 'styled-components'\nimport amex from '../../assets/amex-logo.svg'\nimport { Container } from 'react-bootstrap';\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 18px;\n  `;\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  margin-top: 20px;\n  font-size: 24px;\n  &:hover {\n    color:#F4B400;\n  }\n`;\n\nconst Image = styled.div`\n  background-image: url(${amex});\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst WorkWrapper = styled(Container)`\n  padding-left:0px;\n  padding-right:0px;\n`;\n\nexport {\n    HeadingText, Text, Image, WorkWrapper\n}","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { Text, HeadingText, WorkWrapper } from \"./styles\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport data from \"../../data.json\";\n\nfunction Work() {\n  return (\n    <WorkWrapper>\n      <Row>\n        <HeadingText> Work </HeadingText>\n        {data[0].employment.map((employer) => (\n          <Text>\n            <a href={employer.link}>{employer.employer}</a> <br />\n            {employer.title} <br />\n            <ul>\n              {employer.jobDescription.map((description) => (\n                <li>{description}</li>\n              ))}\n            </ul>\n          </Text>\n        ))}\n      </Row>\n    </WorkWrapper>\n  );\n}\nexport default Work;\n","import styled from 'styled-components'\nimport projects from '../../assets/projects2.png'\nimport { Col, Container } from 'react-bootstrap'\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  margin-top: 20px;\n  font-size: 24px;\n  &:hover {\n    color:#F4B400;\n  }\n`;\n\nconst Text = styled.h3`\n  margin: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 24px;\n  `;\n\nconst ProjectsWrapper = styled(Container)`\n  padding-left:0px;\n  padding-right:0px;\n  padding-bottom:30px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${projects});\n  height: 12rem;\n  background-size: cover;\n  background-repeat: no-repeat; \n`;\n\nconst StyledCol = styled(Col)`\n  padding: 1rem;\n`;\n\nexport {\n    HeadingText, ProjectsWrapper, Image, StyledCol, Text\n}","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { HeadingText, ProjectsWrapper, StyledCol } from \"./styles\";\nimport data from \"../../data.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Projects() {\n  return (\n    <ProjectsWrapper>\n      <Row>\n        <HeadingText> Projects </HeadingText>\n        <Row> \n          {data[0].projects.map((item,) => (\n          <StyledCol>\n            <a href={item.url}>\n              {item.name}\n            </a>\n            : {item.description}\n          </StyledCol>\n          ))}\n        </Row>\n      </Row>\n    </ProjectsWrapper>\n  );\n}\nexport default Projects;\n","import styled from 'styled-components'\nimport { Badge, Container } from \"react-bootstrap\";\n\nconst HeadingText = styled.h1`\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  font-size: 24px;\n  &:hover {\n    color:#F4B400;\n  }\n`;\n\nconst SkillsWrapper = styled(Container)`\n  padding-left:0px;\n  padding-right:0px;\n`;\n\nconst SkillBadge = styled(Badge)`\n    margin-right:.75rem;\n`;\n\nexport {\n    HeadingText, SkillsWrapper, SkillBadge\n}","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { HeadingText, SkillsWrapper, SkillBadge } from \"./styles\";\nimport data from \"../../data.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Skills() {\n  return (\n    <SkillsWrapper>\n      <Row>\n        <HeadingText>Skills</HeadingText>\n      </Row>\n      {data[0].skills.map((skill) => (\n        <SkillBadge pill variant=\"primary\">\n          {skill}\n        </SkillBadge>\n      ))}\n    </SkillsWrapper>\n  );\n}\nexport default Skills;\n","import styled from 'styled-components'\nimport { Button } from \"react-bootstrap\";\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n\nconst Sticky = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n`;\n\nconst Background = styled.div` \n  background-color: ${props => props.theme === 'light' ? 'white' : 'black'};\n  color: ${props => props.theme === 'light' ? 'black' : 'white'};\n`;\n\nconst WIP = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background-color: ${(props) => props.background};\n  color: white;\n`;\n\nconst ThemeButton = styled(Button)`\n  display: flex;\n  flex-direction: row;\n  background-color: transparent;\n  border-color: transparent;\n  position: sticky;\n  top: 0;\n  &:hover {\n    background-color: transparent;\n    border-color: transparent;\n  }\n  &:focus {\n    background-color: transparent;\n    border-color: transparent;\n    outline: none;\n    box-shadow: none;\n  }\n  &:active {\n    background-color: transparent;\n    border-color: transparent;\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport { ButtonWrapper, Sticky, Background, WIP, ThemeButton };\n","import React, { useState } from \"react\";\nimport Home from \"../Home/Home\";\nimport Education from \"../Education/Education\";\nimport Work from \"../Work/Work\";\nimport Projects from \"../Projects/Projects\";\nimport Skills from \"../Skills/Skills\";\nimport { Button } from \"react-bootstrap\";\nimport { ButtonWrapper, Background, ThemeButton } from \"./styles\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n  return (\n    <Background theme={theme}>\n      <ThemeButton onClick={themeToggler} variant=\"light\" size=\"lg\">\n        {theme === \"light\" ? (\n          <span aria-label=\"light\" role=\"img\">\n            🌞\n          </span>\n        ) : (\n          <span aria-label=\"dark\" role=\"img\">\n            🌜\n          </span>\n        )}\n      </ThemeButton>\n      <Home />\n      <Education />\n      <Work />\n      <Skills />\n      <Projects />\n      <ButtonWrapper>\n        <Button\n          variant=\"dark\"\n          size=\"sm\"\n          onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\n        >\n          ⇧\n        </Button>\n      </ButtonWrapper>\n    </Background>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}